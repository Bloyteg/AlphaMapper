// Copyright 2013 Joshua R. Rodgers
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ========================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace AlphaMapper.Property.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PropertyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PropertyEntities object using the connection string found in the 'PropertyEntities' section of the application configuration file.
        /// </summary>
        public PropertyEntities() : base("name=PropertyEntities", "PropertyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PropertyEntities object.
        /// </summary>
        public PropertyEntities(string connectionString) : base(connectionString, "PropertyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PropertyEntities object.
        /// </summary>
        public PropertyEntities(EntityConnection connection) : base(connection, "PropertyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V3Object> V3Object
        {
            get
            {
                if ((_V3Object == null))
                {
                    _V3Object = base.CreateObjectSet<V3Object>("V3Object");
                }
                return _V3Object;
            }
        }
        private ObjectSet<V3Object> _V3Object;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V3Object EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV3Object(V3Object v3Object)
        {
            base.AddObject("V3Object", v3Object);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="west">No Metadata Documentation available.</param>
        /// <param name="north">No Metadata Documentation available.</param>
        /// <param name="east">No Metadata Documentation available.</param>
        /// <param name="south">No Metadata Documentation available.</param>
        public ObjectResult<V3Object> QueryRegion(Nullable<global::System.Int32> west, Nullable<global::System.Int32> north, Nullable<global::System.Int32> east, Nullable<global::System.Int32> south)
        {
            ObjectParameter westParameter;
            if (west.HasValue)
            {
                westParameter = new ObjectParameter("west", west);
            }
            else
            {
                westParameter = new ObjectParameter("west", typeof(global::System.Int32));
            }
    
            ObjectParameter northParameter;
            if (north.HasValue)
            {
                northParameter = new ObjectParameter("north", north);
            }
            else
            {
                northParameter = new ObjectParameter("north", typeof(global::System.Int32));
            }
    
            ObjectParameter eastParameter;
            if (east.HasValue)
            {
                eastParameter = new ObjectParameter("east", east);
            }
            else
            {
                eastParameter = new ObjectParameter("east", typeof(global::System.Int32));
            }
    
            ObjectParameter southParameter;
            if (south.HasValue)
            {
                southParameter = new ObjectParameter("south", south);
            }
            else
            {
                southParameter = new ObjectParameter("south", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<V3Object>("QueryRegion", westParameter, northParameter, eastParameter, southParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="west">No Metadata Documentation available.</param>
        /// <param name="north">No Metadata Documentation available.</param>
        /// <param name="east">No Metadata Documentation available.</param>
        /// <param name="south">No Metadata Documentation available.</param>
        public ObjectResult<V3Object> QueryRegion(Nullable<global::System.Int32> west, Nullable<global::System.Int32> north, Nullable<global::System.Int32> east, Nullable<global::System.Int32> south, MergeOption mergeOption)
        {
            ObjectParameter westParameter;
            if (west.HasValue)
            {
                westParameter = new ObjectParameter("west", west);
            }
            else
            {
                westParameter = new ObjectParameter("west", typeof(global::System.Int32));
            }
    
            ObjectParameter northParameter;
            if (north.HasValue)
            {
                northParameter = new ObjectParameter("north", north);
            }
            else
            {
                northParameter = new ObjectParameter("north", typeof(global::System.Int32));
            }
    
            ObjectParameter eastParameter;
            if (east.HasValue)
            {
                eastParameter = new ObjectParameter("east", east);
            }
            else
            {
                eastParameter = new ObjectParameter("east", typeof(global::System.Int32));
            }
    
            ObjectParameter southParameter;
            if (south.HasValue)
            {
                southParameter = new ObjectParameter("south", south);
            }
            else
            {
                southParameter = new ObjectParameter("south", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<V3Object>("QueryRegion", mergeOption, westParameter, northParameter, eastParameter, southParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlphaMapper.Property.Model", Name="V3Object")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V3Object : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V3Object object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cellX">Initial value of the CellX property.</param>
        /// <param name="cellZ">Initial value of the CellZ property.</param>
        public static V3Object CreateV3Object(global::System.Int32 id, global::System.Int32 cellX, global::System.Int32 cellZ)
        {
            V3Object v3Object = new V3Object();
            v3Object.Id = id;
            v3Object.CellX = cellX;
            v3Object.CellZ = cellZ;
            return v3Object;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BuildDate
        {
            get
            {
                return _BuildDate;
            }
            set
            {
                OnBuildDateChanging(value);
                ReportPropertyChanging("BuildDate");
                _BuildDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildDate");
                OnBuildDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BuildDate;
        partial void OnBuildDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBuildDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Owner
        {
            get
            {
                return _Owner;
            }
            set
            {
                OnOwnerChanging(value);
                ReportPropertyChanging("Owner");
                _Owner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Owner");
                OnOwnerChanged();
            }
        }
        private Nullable<global::System.Int32> _Owner;
        partial void OnOwnerChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PositionY
        {
            get
            {
                return _PositionY;
            }
            set
            {
                OnPositionYChanging(value);
                ReportPropertyChanging("PositionY");
                _PositionY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionY");
                OnPositionYChanged();
            }
        }
        private Nullable<global::System.Int32> _PositionY;
        partial void OnPositionYChanging(Nullable<global::System.Int32> value);
        partial void OnPositionYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CellX
        {
            get
            {
                return _CellX;
            }
            set
            {
                OnCellXChanging(value);
                ReportPropertyChanging("CellX");
                _CellX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CellX");
                OnCellXChanged();
            }
        }
        private global::System.Int32 _CellX;
        partial void OnCellXChanging(global::System.Int32 value);
        partial void OnCellXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OffsetX
        {
            get
            {
                return _OffsetX;
            }
            set
            {
                OnOffsetXChanging(value);
                ReportPropertyChanging("OffsetX");
                _OffsetX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OffsetX");
                OnOffsetXChanged();
            }
        }
        private Nullable<global::System.Int32> _OffsetX;
        partial void OnOffsetXChanging(Nullable<global::System.Int32> value);
        partial void OnOffsetXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CellZ
        {
            get
            {
                return _CellZ;
            }
            set
            {
                OnCellZChanging(value);
                ReportPropertyChanging("CellZ");
                _CellZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CellZ");
                OnCellZChanged();
            }
        }
        private global::System.Int32 _CellZ;
        partial void OnCellZChanging(global::System.Int32 value);
        partial void OnCellZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OffsetZ
        {
            get
            {
                return _OffsetZ;
            }
            set
            {
                OnOffsetZChanging(value);
                ReportPropertyChanging("OffsetZ");
                _OffsetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OffsetZ");
                OnOffsetZChanged();
            }
        }
        private Nullable<global::System.Int32> _OffsetZ;
        partial void OnOffsetZChanging(Nullable<global::System.Int32> value);
        partial void OnOffsetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Yaw
        {
            get
            {
                return _Yaw;
            }
            set
            {
                OnYawChanging(value);
                ReportPropertyChanging("Yaw");
                _Yaw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Yaw");
                OnYawChanged();
            }
        }
        private Nullable<global::System.Int32> _Yaw;
        partial void OnYawChanging(Nullable<global::System.Int32> value);
        partial void OnYawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Tilt
        {
            get
            {
                return _Tilt;
            }
            set
            {
                OnTiltChanging(value);
                ReportPropertyChanging("Tilt");
                _Tilt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tilt");
                OnTiltChanged();
            }
        }
        private Nullable<global::System.Int32> _Tilt;
        partial void OnTiltChanging(Nullable<global::System.Int32> value);
        partial void OnTiltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Roll
        {
            get
            {
                return _Roll;
            }
            set
            {
                OnRollChanging(value);
                ReportPropertyChanging("Roll");
                _Roll = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Roll");
                OnRollChanged();
            }
        }
        private Nullable<global::System.Int32> _Roll;
        partial void OnRollChanging(Nullable<global::System.Int32> value);
        partial void OnRollChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();

        #endregion
    
    }

    #endregion
    
}
